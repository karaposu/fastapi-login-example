openapi: 3.0.0
info:
  title: FastAPI Authentication API
  version: 1.0.0
paths:
  /v1/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '400':
          description: Email already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

  /v1/auth/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

  /v1/auth/private:
    get:
      summary: Access protected route
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

  /v1/auth/logout:
    post:
      summary: Log out a user
      responses:
        '200':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

  # /v1/auth/change-password:
  #   post:
  #     summary: Change user's password
  #     security:
  #       - bearerAuth: []
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               old_password:
  #                 type: string
  #               new_password:
  #                 type: string
  #             required:
  #               - old_password
  #               - new_password
  #     responses:
  #       '200':
  #         description: Password changed successfully
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 msg:
  #                   type: string
  #       '401':
  #         description: Unauthorized
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 detail:
  #                   type: string
  #       '400':
  #         description: Invalid password
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 detail:
  #                   type: string

  /v1/auth/reset-password:
    post:
      summary: Reset user's password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                new_password:
                  type: string
              required:
                - email
                - new_password
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '400':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

  /v1/auth/refresh-token:
    post:
      summary: Refresh JWT token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
